<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhJwEFAfcAAAAAAAAAgADd2QDd2gDc2wDc3ADb3QDb3gDa3wDa4ADZ4QDZ4gDZ4wDY5ADY5QDY
        5gDX5gDX5wDX6ADW6QDW6gDW6wDV7ADV7QDU7QDU7gDU7wDT7wDT8ADT8QDT8gDS8wDS9ADR9ADR9QDQ
        9gDQ9wDQ+ADP+ADP+QDP+gDO+wDN/ADN/QDN/gDM/gDM/wD/AwD/CAD/DgD/EwD/FgD/GAD/GgD/HAD/
        HQD/HwD+IQD+IwD+JAD+JgD+KAD+KgD+KwD+LAD+LgD+LwD+MAD+MQD+MwD+NAD+NgD9NwD9OQD9OgD9
        OwD9PQD9PgD9PwD9QAD8QgD8QwD8RAD8RgD8RwD8SAD8SQD8SwD8TQD8TgD8TwD8UQD7UgD7UwD7VQD7
        VgD7VwD7WAD7WgD7WwD6XAD6XQD6XwD6YAD5YgD5ZAD5ZQD5ZgD4ZwD4aQD4agD4awD4bAD4bgD4bwD4
        cQD3cgD3dAD3dQD3dgD2eAD2eQD2egD2fAD1fgD1fwD1gAD0ggD0gwD0hAD0hQDzhwDziADziQDziwDy
        jADyjQDyjgDykADxkQDxkgDxkwDxlQDwlgDwlwDwmQDwmgDvnADvnQDvnwDvoADuoQDuogDupADtpQDt
        pgDsqADsqQDsqgDrqwDrrADrrQDrrgDqrwDqsQDqsgDqswDptQECAwECAwECAwECAwECAwECAwECAwEC
        AwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwEC
        AwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwEC
        AwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwEC
        AwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwECAwEC
        AyH5BAEAAAAALAAAAAAnAQUBAAj/AAEIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGCO+yMixo8ePIEOK
        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
</value>
  </data>
</root>